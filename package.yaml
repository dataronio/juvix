name:                juvix
version:             0.1.1.15
github:              "anoma/juvix"
license:             GPL-3
homepage:            https://github.com/anoma/juvix#readme
synopsis:            Juvix smart contract language compiler, debugging toolkit, & stateful deployment system
category:            Web3
description:         Please see the README on GitHub at <https://github.com/anoma/juvix#readme>
author:              Cryptium Labs
maintainer:          cwgoes@heliax.dev, jeremy@heliax.dev, marty@heliax.dev, andy@heliax.dev
copyright:           2018 Christopher Goes, 2018-2019 Cryptium Labs, 2019- Heliax AG

extra-source-files:
- README.md

dependencies:
  - aeson
  - base >= 4.11 && < 5
  - Cabal
  - capability >= 0.2.0.0
  - directory
  - extensible-data
  - galois-field
  - lens
  - megaparsec
  - scientific
  - syb
  - temporary
  - wl-pprint-text
  - Pipeline
  ###########################
  # Libraries
  ###########################
  - standard-library
  - Sexp
  - frontend
  - core
  - translate
  - michelson
  - plonk
  - EasyPipeline
  - llvm
  # - interaction-net
  # - InteractionNetIR
  ###########################
  # Dependency for OS
  ###########################
  - turtle
  - time
  - filepath
  ###########################
  # Dependency for Structs
  ###########################
  - text
  - mtl
  - containers
  - unordered-containers
  - hashable
  - fgl
  - fgl-visualize
  - bytestring
  ###########################
  # Dependency for Server
  ###########################
  - servant
  - servant-server
  - servant-static-th

  ###########################
  # Dependency for Morley
  ###########################
  - morley
  ###########################
  # Dependency for debugging
  ###########################
  - pretty-simple

default-extensions:
  - NoImplicitPrelude
  - OverloadedStrings
  - NoMonomorphismRestriction
  - RankNTypes
  - LambdaCase
  - UnicodeSyntax
  - GADTs
  - ScopedTypeVariables
  - DeriveDataTypeable
  - DeriveGeneric
  - DerivingStrategies
  - FlexibleContexts
  - FlexibleInstances
  - DataKinds
  - GeneralizedNewtypeDeriving
  - DefaultSignatures
  - QuasiQuotes
  - TypeOperators
  - MultiParamTypeClasses
  - MultiWayIf
  - TypeInType
  - DerivingVia
  - TypeApplications
  - StandaloneDeriving
  - FunctionalDependencies
  - PatternSynonyms
  - TypeFamilies
  - ConstraintKinds
  - EmptyDataDeriving
  - TemplateHaskell
  - NamedFieldPuns
  - DisambiguateRecordFields
  - TupleSections
  - BlockArguments

when:
  condition: flag(incomplete-error)
  ghc-options:
    - -Werror=incomplete-patterns
    - -Werror=missing-fields
    - -Werror=missing-methods

flags:
  incomplete-error:
    description: >
      Incomplete patterns, missing record fields, and missing class methods are
      an error
    manual: true
    default: false

benchmarks:
  juvix-bench:
    main:         Main.hs
    source-dirs:  bench
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - juvix
      - criterion

library:
  source-dirs: src
  exposed-modules:
    - Juvix

executables:
  juvix:
    source-dirs:      app
    main:             Main.hs
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - aeson
      - ansi-wl-pprint
      - elliptic-curve
      - gitrev
      - haskeline
      - juvix
      - optparse-applicative
      - pretty-simple
      - raw-strings-qq
      - yaml