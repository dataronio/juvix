Rec
    { recordContents = T
        { public = fromList
            [
                ( "make-pair"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( "TopLevel.Prelude.->"
                                ( "TopLevel.Prelude.Michelson.list" "TopLevel.Prelude.Michelson.operation" )
                                ( "TopLevel.Prelude.->" "TopLevel.Prelude.Michelson.int"
                                    ( "TopLevel.Prelude.Michelson.pair"
                                        ( ":paren"
                                            ( "TopLevel.Prelude.Michelson.list" "TopLevel.Prelude.Michelson.operation" ) ) "TopLevel.Prelude.Michelson.int" ) ) )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.pair" ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "main"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( "TopLevel.Prelude.->"
                                ( "TopLevel.Prelude.Michelson.pair" "TopLevel.Prelude.Michelson.int" "TopLevel.Prelude.Michelson.int" )
                                ( "TopLevel.Prelude.Michelson.pair"
                                    ( ":paren"
                                        ( "TopLevel.Prelude.Michelson.list" "TopLevel.Prelude.Michelson.operation" ) ) "TopLevel.Prelude.Michelson.int" ) )
                        , defTerm =
                            ( ":lambda-case"
                                ( ()
                                    ( ":lambda" ( "params" )
                                        ( "make-pair" "nil"
                                            ( ":paren"
                                                ( "car" "params" ) ) ) ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "car"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( "TopLevel.Prelude.->"
                                ( "TopLevel.Prelude.Michelson.pair" "TopLevel.Prelude.Michelson.int" "TopLevel.Prelude.Michelson.int" ) "TopLevel.Prelude.Michelson.int" )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.car" ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "nil"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( "TopLevel.Prelude.Michelson.list" "TopLevel.Prelude.Michelson.operation" )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.nil" ) ) )
                        , defPrecedence = Pred Left 9 } ) ) ]
        , private = fromList [] }
    , recordMTy = Nothing
    , recordOpenList = []
    , recordQualifiedMap = map }