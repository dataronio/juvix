( fromList []
, fromList
    [
        ( "FlatDatatypes" :| [ "Q" ]
        , RawGDataCon
            ( RawDataCon
                { rawConName = "FlatDatatypes" :| [ "Q" ]
                , rawConType = Pi Omega
                    ( Elim
                        ( Free
                            ( Global
                                ( "Prelude" :|
                                    [ "Circuit"
                                    , "field"
                                    ]
                                )
                            ) ()
                        ) ()
                    )
                    ( Pi Omega
                        ( Elim
                            ( Free
                                ( Global
                                    ( "Prelude" :|
                                        [ "Circuit"
                                        , "field"
                                        ]
                                    )
                                ) ()
                            ) ()
                        )
                        ( Pi Omega
                            ( Elim
                                ( Free
                                    ( Global
                                        ( "Prelude" :|
                                            [ "Circuit"
                                            , "field"
                                            ]
                                        )
                                    ) ()
                                ) ()
                            )
                            ( Elim
                                ( Free
                                    ( Global
                                        ( "FlatDatatypes" :| [ "pq" ] )
                                    ) ()
                                ) ()
                            ) ()
                        ) ()
                    ) ()
                , rawConDef = Nothing
                }
            )
        )
    ,
        ( "FlatDatatypes" :| [ "pq" ]
        , RawGDatatype
            ( RawDatatype
                { rawDataName = "FlatDatatypes" :| [ "pq" ]
                , rawDataPos = []
                , rawDataArgs = []
                , rawDataLevel = 0
                , rawDataCons =
                    [ RawDataCon
                        { rawConName = "FlatDatatypes" :| [ "P" ]
                        , rawConType = Pi Omega
                            ( Elim
                                ( Free
                                    ( Global
                                        ( "Prelude" :|
                                            [ "Circuit"
                                            , "field"
                                            ]
                                        )
                                    ) ()
                                ) ()
                            )
                            ( Pi Omega
                                ( Elim
                                    ( Free
                                        ( Global
                                            ( "Prelude" :|
                                                [ "Circuit"
                                                , "field"
                                                ]
                                            )
                                        ) ()
                                    ) ()
                                )
                                ( Elim
                                    ( Free
                                        ( Global
                                            ( "FlatDatatypes" :| [ "pq" ] )
                                        ) ()
                                    ) ()
                                ) ()
                            ) ()
                        , rawConDef = Nothing
                        }
                    , RawDataCon
                        { rawConName = "FlatDatatypes" :| [ "Q" ]
                        , rawConType = Pi Omega
                            ( Elim
                                ( Free
                                    ( Global
                                        ( "Prelude" :|
                                            [ "Circuit"
                                            , "field"
                                            ]
                                        )
                                    ) ()
                                ) ()
                            )
                            ( Pi Omega
                                ( Elim
                                    ( Free
                                        ( Global
                                            ( "Prelude" :|
                                                [ "Circuit"
                                                , "field"
                                                ]
                                            )
                                        ) ()
                                    ) ()
                                )
                                ( Pi Omega
                                    ( Elim
                                        ( Free
                                            ( Global
                                                ( "Prelude" :|
                                                    [ "Circuit"
                                                    , "field"
                                                    ]
                                                )
                                            ) ()
                                        ) ()
                                    )
                                    ( Elim
                                        ( Free
                                            ( Global
                                                ( "FlatDatatypes" :| [ "pq" ] )
                                            ) ()
                                        ) ()
                                    ) ()
                                ) ()
                            ) ()
                        , rawConDef = Nothing
                        }
                    ]
                }
            )
        )
    ,
        ( "FlatDatatypes" :| [ "patternMatch" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "FlatDatatypes" :| [ "patternMatch" ]
                , rawFunUsage = GOmega
                , rawFunType = Pi Omega
                    ( Elim
                        ( Free
                            ( Global
                                ( "FlatDatatypes" :| [ "pq" ] )
                            ) ()
                        ) ()
                    )
                    ( Elim
                        ( Free
                            ( Global
                                ( "Prelude" :|
                                    [ "Circuit"
                                    , "field"
                                    ]
                                )
                            ) ()
                        ) ()
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats =
                        [ PCon
                            ( "P" :| [] )
                            [ PVar 0 ()
                            , PVar 1 ()
                            ] ()
                        ]
                    , rawClauseBody = Elim
                        ( App
                            ( App
                                ( Free
                                    ( Global
                                        ( "Prelude" :|
                                            [ "Circuit"
                                            , "Field"
                                            , "+"
                                            ]
                                        )
                                    ) ()
                                )
                                ( Elim
                                    ( Free
                                        ( Pattern 0 ) ()
                                    ) ()
                                ) ()
                            )
                            ( Elim
                                ( Free
                                    ( Pattern 1 ) ()
                                ) ()
                            ) ()
                        ) ()
                    , rawClauseCatchall = False
                    } :|
                    [ RawFunClause
                        { rawClauseTel = []
                        , rawClausePats =
                            [ PCon
                                ( "Q" :| [] )
                                [ PVar 2 ()
                                , PVar 3 ()
                                , PVar 4 ()
                                ] ()
                            ]
                        , rawClauseBody = Elim
                            ( App
                                ( App
                                    ( Free
                                        ( Global
                                            ( "Prelude" :|
                                                [ "Circuit"
                                                , "Field"
                                                , "+"
                                                ]
                                            )
                                        ) ()
                                    )
                                    ( Elim
                                        ( App
                                            ( App
                                                ( Free
                                                    ( Global
                                                        ( "Prelude" :|
                                                            [ "Circuit"
                                                            , "Field"
                                                            , "+"
                                                            ]
                                                        )
                                                    ) ()
                                                )
                                                ( Elim
                                                    ( Free
                                                        ( Pattern 2 ) ()
                                                    ) ()
                                                ) ()
                                            )
                                            ( Elim
                                                ( Free
                                                    ( Pattern 3 ) ()
                                                ) ()
                                            ) ()
                                        ) ()
                                    ) ()
                                )
                                ( Elim
                                    ( Free
                                        ( Pattern 4 ) ()
                                    ) ()
                                ) ()
                            ) ()
                        , rawClauseCatchall = False
                        }
                    ]
                }
            )
        )
    ,
        ( "FlatDatatypes" :| [ "P" ]
        , RawGDataCon
            ( RawDataCon
                { rawConName = "FlatDatatypes" :| [ "P" ]
                , rawConType = Pi Omega
                    ( Elim
                        ( Free
                            ( Global
                                ( "Prelude" :|
                                    [ "Circuit"
                                    , "field"
                                    ]
                                )
                            ) ()
                        ) ()
                    )
                    ( Pi Omega
                        ( Elim
                            ( Free
                                ( Global
                                    ( "Prelude" :|
                                        [ "Circuit"
                                        , "field"
                                        ]
                                    )
                                ) ()
                            ) ()
                        )
                        ( Elim
                            ( Free
                                ( Global
                                    ( "FlatDatatypes" :| [ "pq" ] )
                                ) ()
                            ) ()
                        ) ()
                    ) ()
                , rawConDef = Nothing
                }
            )
        )
    ,
        ( "FlatDatatypes" :| [ "main" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "FlatDatatypes" :| [ "main" ]
                , rawFunUsage = GOmega
                , rawFunType = Elim
                    ( Free
                        ( Global
                            ( "Prelude" :|
                                [ "Circuit"
                                , "field"
                                ]
                            )
                        ) ()
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Elim
                        ( App
                            ( Free
                                ( Global
                                    ( "FlatDatatypes" :| [ "patternMatch" ] )
                                ) ()
                            )
                            ( Elim
                                ( App
                                    ( App
                                        ( Free
                                            ( Global
                                                ( "FlatDatatypes" :| [ "P" ] )
                                            ) ()
                                        )
                                        ( Prim
                                            ( PConst
                                                ( P
                                                    ( 1 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                                )
                                            ) ()
                                        ) ()
                                    )
                                    ( Prim
                                        ( PConst
                                            ( P
                                                ( 2 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                            )
                                        ) ()
                                    ) ()
                                ) ()
                            ) ()
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ]
)