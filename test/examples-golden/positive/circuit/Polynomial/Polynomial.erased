Ann
    { usage = SAny
    , type' = Pi SAny ( PrimTy PField )
        ( Pi SAny ( PrimTy PField ) ( PrimTy PBool ) )
    , term = LamM
        { capture = []
        , arguments =
            [ "0" :| []
            , "1" :| []
            ]
        , body = Ann
            { usage = SAny
            , type' = PrimTy PBool
            , term = AppM
                ( Ann
                    { usage = SAny
                    , type' = Pi SAny ( PrimTy PField )
                        ( Pi SAny ( PrimTy PField ) ( PrimTy PBool ) )
                    , term = Prim
                        ( Return
                            { retType = PrimType
                                { getPrimType = PField :|
                                    [ PField
                                    , PBool
                                    ]
                                }
                            , retTerm = PEq
                            }
                        )
                    }
                )
                [ Ann
                    { usage = SAny
                    , type' = PrimTy PField
                    , term = AppM
                        ( Ann
                            { usage = SAny
                            , type' = Pi SAny ( PrimTy PField )
                                ( Pi SAny ( PrimTy PField ) ( PrimTy PField ) )
                            , term = Prim
                                ( Return
                                    { retType = PrimType
                                        { getPrimType = PField :|
                                            [ PField
                                            , PField
                                            ]
                                        }
                                    , retTerm = PExp
                                    }
                                )
                            }
                        )
                        [ Ann
                            { usage = SAny
                            , type' = PrimTy PField
                            , term = Var
                                ( "0" :| [] )
                            }
                        , Ann
                            { usage = SAny
                            , type' = PrimTy PField
                            , term = Prim
                                ( Return
                                    { retType = PrimType
                                        { getPrimType = PField :| [] }
                                    , retTerm = PConst
                                        ( P
                                            ( 3 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                        )
                                    }
                                )
                            }
                        ]
                    }
                , Ann
                    { usage = SAny
                    , type' = PrimTy PField
                    , term = Var
                        ( "1" :| [] )
                    }
                ]
            }
        }
    }