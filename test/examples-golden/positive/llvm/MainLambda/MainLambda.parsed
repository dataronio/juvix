Right
    ( Header
        ( "MainLambda" :| [] )
        [ ModuleOpen
            ( Open
                ( "Prelude" :| [] )
            )
        , ModuleOpen
            ( Open
                ( "LLVM" :| [] )
            )
        , Signature
            ( Sig
                { signatureName = "main"
                , signatureUsage = Nothing
                , signatureArrowType = Infix
                    ( Inf
                        { infixLeft = Name
                            ( "int" :| [] )
                        , infixOp = "->" :| []
                        , infixRight = Infix
                            ( Inf
                                { infixLeft = Name
                                    ( "int" :| [] )
                                , infixOp = "->" :| []
                                , infixRight = Name
                                    ( "int" :| [] )
                                }
                            )
                        }
                    )
                , signatureConstraints = []
                }
            )
        , Function
            ( Func
                ( Like
                    { functionLikedName = "main"
                    , functionLikeArgs = []
                    , functionLikeBody = Body
                        ( Lambda
                            ( Lamb
                                { lambdaArgs = MatchLogic
                                    { matchLogicContents = MatchName "x"
                                    , matchLogicNamed = Nothing
                                    } :|
                                    [ MatchLogic
                                        { matchLogicContents = MatchName "y"
                                        , matchLogicNamed = Nothing
                                        }
                                    ]
                                , lambdaBody = Name
                                    ( "y" :| [] )
                                }
                            )
                        )
                    }
                )
            )
        ]
    )