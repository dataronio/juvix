Ann
    { usage = SAny
    , type' = PrimTy
        ( PrimTy
            ( IntegerType
                { typeBits = 8 }
            )
        )
    , term = AppM
        ( Ann
            { usage = SAny
            , type' = Pi SAny
                ( SymT
                    ( "Datatypes" :| [ "pq" ] )
                )
                ( PrimTy
                    ( PrimTy
                        ( IntegerType
                            { typeBits = 8 }
                        )
                    )
                )
            , term = Var
                ( "Datatypes" :| [ "patternMatch" ] )
            }
        )
        [ Ann
            { usage = SAny
            , type' = SymT
                ( "Datatypes" :| [ "pq" ] )
            , term = AppM
                ( Ann
                    { usage = SAny
                    , type' = Pi SAny
                        ( PrimTy
                            ( PrimTy
                                ( IntegerType
                                    { typeBits = 8 }
                                )
                            )
                        )
                        ( Pi SAny
                            ( PrimTy
                                ( PrimTy
                                    ( IntegerType
                                        { typeBits = 8 }
                                    )
                                )
                            )
                            ( SymT
                                ( "Datatypes" :| [ "pq" ] )
                            )
                        )
                    , term = Var
                        ( "Datatypes" :| [ "P" ] )
                    }
                )
                [ Ann
                    { usage = SAny
                    , type' = PrimTy
                        ( PrimTy
                            ( IntegerType
                                { typeBits = 8 }
                            )
                        )
                    , term = Prim
                        ( Return
                            { retType = PrimType
                                { getPrimType = PrimTy
                                    ( IntegerType
                                        { typeBits = 8 }
                                    ) :| []
                                }
                            , retTerm = LitInt 1
                            }
                        )
                    }
                , Ann
                    { usage = SAny
                    , type' = PrimTy
                        ( PrimTy
                            ( IntegerType
                                { typeBits = 8 }
                            )
                        )
                    , term = Prim
                        ( Return
                            { retType = PrimType
                                { getPrimType = PrimTy
                                    ( IntegerType
                                        { typeBits = 8 }
                                    ) :| []
                                }
                            , retTerm = LitInt 2
                            }
                        )
                    }
                ]
            }
        ]
    }